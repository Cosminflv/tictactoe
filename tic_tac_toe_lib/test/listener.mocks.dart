// Mocks generated by Mockito 5.4.2 from annotations
// in tic_tac_toe_lib/test/tic_tac_toe_lib_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:tic_tac_toe_lib/src/GameInfo/game_state.dart' as _i5;
import 'package:tic_tac_toe_lib/src/igame_listener.dart' as _i2;
import 'package:tic_tac_toe_lib/src/GameInfo/piece.dart' as _i4;
import 'package:tic_tac_toe_lib/src/GameInfo/position.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IGameListener].
///
/// See the documentation for Mockito's code generation for more information.
class MockIGameListener extends _i1.Mock implements _i2.IGameListener {
  @override
  void onPiecePlaced(
    _i3.Pair<int, int>? p,
    _i4.Piece? piece,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onPiecePlaced,
          [
            p,
            piece,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onGameOver(_i5.GameState? state) => super.noSuchMethod(
        Invocation.method(
          #onGameOver,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onRestart() => super.noSuchMethod(
        Invocation.method(
          #onRestart,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
